name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd microservice && npm ci

      - name: Run tests
        run: npm test

      - name: Build and push Docker images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          
          # Build and push main application
          docker build -t $DOCKER_USERNAME/appointment-app:${{ github.sha }} .
          docker push $DOCKER_USERNAME/appointment-app:${{ github.sha }}
          
          # Build and push notification service
          cd microservice
          docker build -t $DOCKER_USERNAME/notification-service:${{ github.sha }} .
          docker push $DOCKER_USERNAME/notification-service:${{ github.sha }}

      - name: Update deployment files
        run: |
          # Update docker-compose.yml with new image tags
          sed -i 's|build:|image: ${{ secrets.DOCKER_USERNAME }}/appointment-app:${{ github.sha }}|' docker-compose.yml
          sed -i 's|build:|image: ${{ secrets.DOCKER_USERNAME }}/notification-service:${{ github.sha }}|' docker-compose.yml

      - name: Deploy application
        env:
          DEPLOY_SSH_KEY: ${{ secrets.DEPLOY_SSH_KEY }}
          DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
          DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        run: |
          # Setup SSH key
          mkdir -p ~/.ssh
          echo "$DEPLOY_SSH_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Copy files and deploy
          scp -i ~/.ssh/deploy_key docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:~/app/
          ssh -i ~/.ssh/deploy_key $DEPLOY_USER@$DEPLOY_HOST 'cd ~/app && docker-compose pull && docker-compose up -d'